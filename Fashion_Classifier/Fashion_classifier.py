# -*- coding: utf-8 -*-
"""cloth_detector.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/github/Rn7988745624/OpenCV_Projects/blob/main/Cloth_Detection/cloth_detector.ipynb
"""

import tensorflow as tf
from tensorflow import keras
import matplotlib.pyplot as plt
import random
import numpy as np

fashion_mnist = keras.datasets.fashion_mnist.load_data()
(training_images, training_labels), (test_images, test_labels) = fashion_mnist
shuffle_index_train = np.random.permutation(60000)
shuffle_index_test = np.random.permutation(10000)
training_images, training_labels = training_images[shuffle_index_train], training_labels[shuffle_index_train]
test_images, test_labels = test_images[shuffle_index_test], test_labels[shuffle_index_test]
training_images = training_images.reshape(60000, 28, 28, 1)
training_images = training_images / 255.0
test_images = test_images.reshape(10000, 28, 28, 1)
test_images = test_images / 255.0



model = tf.keras.models.Sequential([
        tf.keras.layers.Conv2D(64, (3, 3), activation = 'relu', input_shape = (28, 28, 1)),
        tf.keras.layers.MaxPooling2D(2, 2),
        tf.keras.layers.Conv2D(64, (3, 3), activation='relu'),
        tf.keras.layers.MaxPooling2D(2, 2),
        tf.keras.layers.Flatten(),
        tf.keras.layers.Dense(256, activation='relu'),
        tf.keras.layers.Dense(20, activation='softmax')
    ])


class StopTrainingCallback(tf.keras.callbacks.Callback):
    def on_epoch_end(self, epoch, logs={}):
        if logs.get('acc') >= 0.95:
            print('\nReached 95% accuracy so cancelling training!')
            self.model.stop_training = True
                
callback = StopTrainingCallback()

model.compile(optimizer='sgd', loss='sparse_categorical_crossentropy', metrics=['acc'])
# model fitting
history = model.fit(
    training_images, training_labels, epochs = 20, callbacks = [callback]
)

model.evaluate(test_images, test_labels)
plt.imshow(test_images[0])
plt.show()
print(test_labels[0])
model.predict(test_images)